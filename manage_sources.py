#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ YouTube2Podcast
"""

import sys
import argparse
from config import (
    Source, SourceType, Subscription, get_enabled_sources, get_enabled_subscriptions, get_source_by_name,
    add_source, remove_source, enable_source, disable_source, list_sources,
    add_subscription, remove_subscription, enable_subscription, disable_subscription, list_subscriptions
)


def print_sources(sources):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    if not sources:
        print("‚ùå –ù–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤")
        return
    
    print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ {len(sources)} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:")
    print("=" * 120)
    print(f"{'–ò–º—è':<20} {'–ü–æ–¥–ø–∏—Å–∫–∞':<15} {'–¢–∏–ø':<10} {'–°—Ç–∞—Ç—É—Å':<8} {'–ò–Ω—Ç–µ—Ä–≤–∞–ª':<8} {'–ú–∞–∫—Å.–≤–∏–¥–µ–æ':<10} {'URL'}")
    print("-" * 120)
    
    for source in sources:
        status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if source['enabled'] else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"
        subscription = source.get('subscription', 'N/A')
        print(f"{source['name']:<20} {subscription:<15} {source['type']:<10} {status:<8} {source['check_interval']:<8} {source['max_videos']:<10} {source['url']}")
    
    print("=" * 120)


def print_subscriptions(subscriptions):
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    if not subscriptions:
        print("‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫")
        return
    
    print(f"\nüì¶ –ù–∞–π–¥–µ–Ω–æ {len(subscriptions)} –ø–æ–¥–ø–∏—Å–æ–∫:")
    print("=" * 100)
    print(f"{'–ò–º—è':<20} {'–ù–∞–∑–≤–∞–Ω–∏–µ':<25} {'–°—Ç–∞—Ç—É—Å':<8} {'–ö–∞—Ç–µ–≥–æ—Ä–∏—è':<15} {'–ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤':<12}")
    print("-" * 100)
    
    for sub in subscriptions:
        status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if sub['enabled'] else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"
        sources_info = f"{sub['enabled_sources_count']}/{sub['sources_count']}"
        print(f"{sub['name']:<20} {sub['title']:<25} {status:<8} {sub['category']:<15} {sources_info:<12}")
    
    print("=" * 100)


def add_source_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞"""
    print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
    print("-" * 30)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞: ").strip()
    if not name:
        print("‚ùå –ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    url = input("–í–≤–µ–¥–∏—Ç–µ URL (–ø–ª–µ–π–ª–∏—Å—Ç –∏–ª–∏ –∫–∞–Ω–∞–ª): ").strip()
    if not url:
        print("‚ùå URL –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    if "playlist" in url:
        source_type = SourceType.PLAYLIST
    elif "@" in url or "channel" in url:
        source_type = SourceType.CHANNEL
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞. –£–∫–∞–∂–∏—Ç–µ —è–≤–Ω–æ:")
        print("1. –ü–ª–µ–π–ª–∏—Å—Ç")
        print("2. –ö–∞–Ω–∞–ª")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø (1 –∏–ª–∏ 2): ").strip()
        source_type = SourceType.PLAYLIST if choice == "1" else SourceType.CHANNEL
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    custom_title = input("–ö–∞—Å—Ç–æ–º–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è RSS (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip() or None
    custom_description = input("–ö–∞—Å—Ç–æ–º–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è RSS (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip() or None
    
    check_interval = input("–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10): ").strip()
    check_interval = int(check_interval) if check_interval.isdigit() else 10
    
    max_videos = input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5): ").strip()
    max_videos = int(max_videos) if max_videos.isdigit() else 5
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
    try:
        add_source(
            name=name,
            url=url,
            source_type=source_type,
            custom_title=custom_title,
            custom_description=custom_description,
            check_interval=check_interval,
            max_videos=max_videos
        )
        print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: {e}")


def add_subscription_interactive():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""
    print("\nüì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏")
    print("-" * 30)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–¥–ø–∏—Å–∫–∏: ").strip()
    if not name:
        print("‚ùå –ò–º—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return
    
    title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: ").strip()
    if not title:
        title = name.title()
    
    description = input("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏: ").strip()
    if not description:
        description = f"–ü–æ–¥–∫–∞—Å—Ç –∏–∑ –ø–æ–¥–ø–∏—Å–∫–∏ {name}"
    
    category = input("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'News & Politics'): ").strip()
    if not category:
        category = "News & Politics"
    
    author = input("–í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip() or None
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    try:
        add_subscription(
            name=name,
            title=title,
            description=description,
            category=category,
            author=author
        )
        print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    parser = argparse.ArgumentParser(
        description="–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ YouTube2Podcast",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python manage_sources.py list                    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
  python manage_sources.py list-subscriptions      # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏
  python manage_sources.py add                     # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
  python manage_sources.py add-subscription        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
  python manage_sources.py enable varlamov         # –í–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫
  python manage_sources.py disable varlamov       # –û—Ç–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫
  python manage_sources.py remove varlamov        # –£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫
  python manage_sources.py enable-subscription news_politics  # –í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  python manage_sources.py disable-subscription news_politics  # –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  python manage_sources.py remove-subscription news_politics  # –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  python manage_sources.py add-source "test" "https://youtube.com/..." playlist  # –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        """
    )
    
    subparsers = parser.add_subparsers(dest='command', help='–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã')
    
    # –ö–æ–º–∞–Ω–¥–∞ list
    list_parser = subparsers.add_parser('list', help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ list-subscriptions
    list_subscriptions_parser = subparsers.add_parser('list-subscriptions', help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ add (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è)
    add_parser = subparsers.add_parser('add', help='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    
    # –ö–æ–º–∞–Ω–¥–∞ add-subscription (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è)
    add_subscription_parser = subparsers.add_parser('add-subscription', help='–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ add-source (–ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è)
    add_source_parser = subparsers.add_parser('add-source', help='–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    add_source_parser.add_argument('name', help='–ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    add_source_parser.add_argument('url', help='URL –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    add_source_parser.add_argument('type', choices=['playlist', 'channel'], help='–¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    add_source_parser.add_argument('--title', help='–ö–∞—Å—Ç–æ–º–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è RSS')
    add_source_parser.add_argument('--description', help='–ö–∞—Å—Ç–æ–º–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è RSS')
    add_source_parser.add_argument('--interval', type=int, default=10, help='–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö')
    add_source_parser.add_argument('--max-videos', type=int, default=5, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ enable
    enable_parser = subparsers.add_parser('enable', help='–í–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫')
    enable_parser.add_argument('name', help='–ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    
    # –ö–æ–º–∞–Ω–¥–∞ disable
    disable_parser = subparsers.add_parser('disable', help='–û—Ç–∫–ª—é—á–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫')
    disable_parser.add_argument('name', help='–ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    
    # –ö–æ–º–∞–Ω–¥–∞ remove
    remove_parser = subparsers.add_parser('remove', help='–£–¥–∞–ª–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫')
    remove_parser.add_argument('name', help='–ò–º—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    
    # –ö–æ–º–∞–Ω–¥–∞ enable-subscription
    enable_subscription_parser = subparsers.add_parser('enable-subscription', help='–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
    enable_subscription_parser.add_argument('name', help='–ò–º—è –ø–æ–¥–ø–∏—Å–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ disable-subscription
    disable_subscription_parser = subparsers.add_parser('disable-subscription', help='–û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
    disable_subscription_parser.add_argument('name', help='–ò–º—è –ø–æ–¥–ø–∏—Å–∫–∏')
    
    # –ö–æ–º–∞–Ω–¥–∞ remove-subscription
    remove_subscription_parser = subparsers.add_parser('remove-subscription', help='–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É')
    remove_subscription_parser.add_argument('name', help='–ò–º—è –ø–æ–¥–ø–∏—Å–∫–∏')
    
    args = parser.parse_args()
    
    if not args.command:
        parser.print_help()
        return
    
    try:
        if args.command == 'list':
            sources = list_sources()
            print_sources(sources)
            
        elif args.command == 'list-subscriptions':
            subscriptions = list_subscriptions()
            print_subscriptions(subscriptions)
            
        elif args.command == 'add':
            add_source_interactive()
            
        elif args.command == 'add-subscription':
            add_subscription_interactive()
            
        elif args.command == 'add-source':
            source_type = SourceType.PLAYLIST if args.type == 'playlist' else SourceType.CHANNEL
            add_source(
                name=args.name,
                url=args.url,
                source_type=source_type,
                custom_title=args.title,
                custom_description=args.description,
                check_interval=args.interval,
                max_videos=args.max_videos
            )
            print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ '{args.name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
            
        elif args.command == 'enable':
            enable_source(args.name)
            print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ '{args.name}' –≤–∫–ª—é—á–µ–Ω")
            
        elif args.command == 'disable':
            disable_source(args.name)
            print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ '{args.name}' –æ—Ç–∫–ª—é—á–µ–Ω")
            
        elif args.command == 'remove':
            remove_source(args.name)
            print(f"‚úÖ –ò—Å—Ç–æ—á–Ω–∏–∫ '{args.name}' —É–¥–∞–ª–µ–Ω")
            
        elif args.command == 'enable-subscription':
            enable_subscription(args.name)
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ '{args.name}' –≤–∫–ª—é—á–µ–Ω–∞")
            
        elif args.command == 'disable-subscription':
            disable_subscription(args.name)
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ '{args.name}' –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            
        elif args.command == 'remove-subscription':
            remove_subscription(args.name)
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ '{args.name}' —É–¥–∞–ª–µ–Ω–∞")
            
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
