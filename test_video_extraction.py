#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ –∫–∞–Ω–∞–ª–∞
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from config import Source, SourceType
from multi_downloader import get_videos_from_source, print_video_links


def test_channel_extraction():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ –∫–∞–Ω–∞–ª–∞"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª)
    test_source = Source(
        name="test_channel",
        url="https://www.youtube.com/@varlamov",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª
        source_type=SourceType.CHANNEL,
        enabled=True,
        check_interval=10,
        max_videos=10,  # –ü—Ä–æ–≤–µ—Ä–∏–º –±–æ–ª—å—à–µ –≤–∏–¥–µ–æ
        custom_title="Test Channel",
        custom_description="Test Description",
        category="Test",
        author="test_author"
    )
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ –∫–∞–Ω–∞–ª–∞")
    print("=" * 60)
    print(f"–ö–∞–Ω–∞–ª: {test_source.url}")
    print(f"–ú–∞–∫—Å–∏–º—É–º –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {test_source.max_videos}")
    print("=" * 60)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–∏–¥–µ–æ
    videos = get_videos_from_source(test_source)
    
    if not videos:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–∏–¥–µ–æ –∏–∑ –∫–∞–Ω–∞–ª–∞")
        return
    
    print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ {len(videos)} –≤–∏–¥–µ–æ")
    print("=" * 60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –≤–∏–¥–µ–æ —Å –¥–∞—Ç–∞–º–∏
    print("üìã –ü–µ—Ä–≤—ã–µ 10 –≤–∏–¥–µ–æ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏):")
    print_video_links(videos[:10], test_source.name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏:")
    if len(videos) >= 2:
        first_video = videos[0]
        second_video = videos[1]
        
        print(f"1. {first_video['title']}")
        if first_video.get('upload_date'):
            print(f"   –î–∞—Ç–∞: {first_video['upload_date']}")
        
        print(f"2. {second_video['title']}")
        if second_video.get('upload_date'):
            print(f"   –î–∞—Ç–∞: {second_video['upload_date']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–≤–æ–µ –≤–∏–¥–µ–æ –Ω–æ–≤–µ–µ –≤—Ç–æ—Ä–æ–≥–æ
        if (first_video.get('upload_date', '') > second_video.get('upload_date', '')):
            print("‚úÖ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–Ω–æ–≤—ã–µ –≤–∏–¥–µ–æ —Å–Ω–∞—á–∞–ª–∞)")
        else:
            print("‚ùå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏")


if __name__ == "__main__":
    test_channel_extraction()
