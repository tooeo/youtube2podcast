name: Test and CI v2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        # Updated Python versions - removed 3.9, using 3.10, 3.11, 3.12
        python-version: ['3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Clear GitHub Actions cache
      run: |
        echo "Clearing any cached Python versions..."
        rm -rf ~/.cache/pip || true
        rm -rf ~/.local/lib/python* || true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        check-latest: true
        cache: 'pip'
    
    - name: Debug Python version
      run: |
        echo "Requested Python version: ${{ matrix.python-version }}"
        python --version
        which python
    
    - name: Clear Python cache
      run: |
        python -m pip cache purge || true
    
    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics || true
    
    - name: Check code formatting with black
      run: |
        black --check --diff . || true
    
    - name: Test imports
      run: |
        python -c "from config import Source, SourceType, Subscription, Config, ConfigManager; print('‚úÖ Config imports OK')"
        python -c "import multi_downloader; print('‚úÖ Multi-downloader import OK')"
    
    - name: Test with pytest
      run: |
        python -m pytest -v

  docker:
    runs-on: ubuntu-22.04
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t youtube2podcast .
    
    - name: Test Docker image basic functionality
      run: |
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ Docker –æ–±—Ä–∞–∑–∞..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python:"
        docker run --rm youtube2podcast python --version
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π:"
        docker run --rm youtube2podcast python -c "
        try:
            from config import Source, SourceType, Subscription, Config, ConfigManager
            print('‚úÖ Config imports OK')
        except ImportError as e:
            print(f'‚ùå Config import failed: {e}')
            exit(1)
        
        try:
            import multi_downloader
            print('‚úÖ Multi-downloader import OK')
        except ImportError as e:
            print(f'‚ùå Multi-downloader import failed: {e}')
            exit(1)
        "
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å yt-dlp
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ yt-dlp:"
        docker run --rm youtube2podcast python -c "
        try:
            import yt_dlp
            print(f'‚úÖ yt-dlp version: {yt_dlp.version.__version__}')
        except ImportError as e:
            print(f'‚ùå yt-dlp import failed: {e}')
            exit(1)
        "
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å FFmpeg
        echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg:"
        docker run --rm youtube2podcast ffmpeg -version | head -1
        
        echo "‚úÖ –í—Å–µ –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã Docker –æ–±—Ä–∞–∑–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"
    
    - name: Test Docker image with SKIP_DOWNLOAD
      run: |
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å SKIP_DOWNLOAD=true..."
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π SKIP_DOWNLOAD=true
        echo "üìã –¢–µ—Å—Ç —Å –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏:"
        docker run --rm \
          -e SKIP_DOWNLOAD=true \
          -v $(pwd)/config.yaml.dist:/app/config.yaml \
          youtube2podcast python -c "
        import multi_downloader
        from config import ConfigManager
        
        try:
            config_manager = ConfigManager()
            print('‚úÖ ConfigManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç
            import os
            skip_download = os.environ.get('SKIP_DOWNLOAD', 'false').lower()
            print(f'üìã SKIP_DOWNLOAD={skip_download}')
            
            if skip_download in ('true', '1', 'yes'):
                print('‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è SKIP_DOWNLOAD –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
            else:
                print('‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è SKIP_DOWNLOAD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')
                exit(1)
                
        except Exception as e:
            print(f'‚ùå –¢–µ—Å—Ç failed: {e}')
            exit(1)
        "
        
        echo "‚úÖ –¢–µ—Å—Ç—ã —Å SKIP_DOWNLOAD –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"
